import "types"
import "error"
import "ast"
import "validator"
import "scope"

def validate_read(state: &validator.State, read_info: &ast.ReadInfo, node: &ast.AST) Maybe[&error.CompilerError] =
    guard Some desc_info := state.scope.get_var read_info.name
    else return Some error.make_Error node, "No variable called {read_info.name}"

    node._type = desc_info.type_of_desc!
    read_info.is_global = desc_info.is_global

    None

def validate_create_assign(state: &validator.State, node: &ast.AST) Maybe[&error.CompilerError] =
    create := node.nodes[0]
    assign := node.nodes[1]

    if Some e := state.validate_nodes assign.nodes then
        return Some e

    typ := assign.nodes[0]._type

    v := create.nodes[0]
    v._type = typ

    guard Identifier read_info := v.payload
    else panic "Expecting identifier in create assign"

    decl_info := scope.make_DeclInfo!
    decl_info._type = typ

    var_exists := state.scope.create_decl read_info.name, &decl_info

    if var_exists then return Some error.make_Error node, "Var {read_info.name} already exists"

    read_info.is_global = decl_info.is_global

    None