import "types"
import "error"
import "ast"
import "validator"
import "scope"

def validate_read(state: &validator.State, read_info: &ast.ReadInfo, node: &ast.AST) Maybe[&error.CompilerError] =
    guard Some desc_info := state.scope.get_var read_info.name
    else return Some error.make_Error node, "No variable called {read_info.name}"

    node._type = desc_info._type
    read_info.is_global = desc_info.is_global

    None

def validate_create_assign(state: &validator.State, node: &ast.AST) Maybe[&error.CompilerError] =
    (create, assign) := (node.nodes[0], node.nodes[1])

    ?state.validate_nodes assign.nodes

    typ := assign.nodes[0]._type

    v := create.nodes[0]
    v._type = typ

    guard Identifier read_info := v.payload
    else panic "Expecting identifier in create assign"

    decl_info := scope.make_DeclInfo typ
    ?state.scope.create_decl read_info.name, &decl_info, create

    read_info.is_global = decl_info.is_global

    None