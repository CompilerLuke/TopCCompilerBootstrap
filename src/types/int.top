def int_to_string(unsigned: bool, size: uint) string =
    prefix := if unsigned then "u" else "i"
    "{prefix}{size}"

def int_duck_type(unsigned: bool, size: uint, other: CompilerType, thrower: Thrower) Maybe[&CompilerError] =
    match other.to_real_type! with
        Int unsigned2, size2 ->
            if unsigned and not unsigned2 then Some error.make_Error thrower, "Cannot convert from signed to unsigned int"
            elif size2 > size then Some error.make_Error thrower, "Loosing information by casting from {other}, {int_to_string unsigned, size}"
            else None

        _ -> Some error.make_Error thrower, "Expecting {int_to_string unsigned, size}, not {other}"

def make_Int() CompilerType =
    Int false, 32