from "hashMap" import HashMap
import "error"

type StructInfo =
    name: string
    fields: HashMap[CompilerType]

def StructInfo.toString(&self) string =
    self.name

def StructInfo.equals(&self, other: CompilerType) bool =
    match other.to_real_type! with
        Struct o -> o.name == self.name
        _ -> false

def StructInfo.duck_type(&self, other: CompilerType, thrower: Thrower) Maybe[&error.CompilerError] =
    if self.equals other then None
    else Some error.make_Error thrower, "Expecting {self} not {other}"

def StructInfo.op_eq(&self, other: &StructInfo) bool =
    self.name == other.name

def make_StructInfo(name: string, fields: HashMap[CompilerType]) &StructInfo =
    box StructInfo{
        name = name
        fields = fields
    }

