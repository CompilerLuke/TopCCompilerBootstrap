import "parser"
import "ast"
import "error"
import "types"

def parse_identifier(self: &parser.Parser, name: string) Maybe[&error.CompilerError] =
    id := ast.make_AST self, ast.Identifier box ast.ReadInfo{
        name = name
        is_global = true
    }

    self.current_node.add id

    None

def parse_create_assign(self: &parser.Parser) Maybe[&error.CompilerError] =
    if self.current_node.nodes.length == 0 then
        return Some error.make_Error self, "Unexpected assign"

    v := self.current_node.nodes.pop!

    node := ast.make_AST self, ast.CreateAssign
    create := ast.make_AST self, ast.Create

    create.add v
    node.add create

    assign := ast.make_AST self, ast.Assign

    self.push_current_node node
    self.push_current_node assign

    indent := self.num_indent
    while not (self.is_end indent) do
        _ := self.next!
        if Some e := self.eval! then
            return Some e

    self.pop_current_node!
    self.pop_current_node!

    None