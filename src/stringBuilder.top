type StringBuilder =
    chars: [..]char

def StringBuilder.append(using &self, s: string) =
    chars.reserve chars.length + s.length

    for i := 0..s.length do
        self.chars.append s[i]

def StringBuilder.shorten(using &self, num: uint) =
    chars.shorten num

def StringBuilder.toString(&self) string =
    /*
    chars := [..]char
    chars.reserve self.chars.length + 1

    for c := self.chars do
        chars.append c
    */

    self.chars.append `\0` //null terminated
    s := make_String self.chars.length - 1, self.chars.data.unwrap! //unwrap is safe as we just added one char
    _ := self.chars.pop!

    s
def make_StringBuilder() StringBuilder =
    StringBuilder{ [..]char }